{
	"$schema": "./node_modules/@angular/cli/lib/config/schema.json",
	"version": 1,
	"newProjectRoot": "projects",
	"projects": {
		"ngx-cdk-lightbox": {
			"projectType": "library",
			"schematics": {
				"@schematics/angular:component": {
					"style": "scss",
					"changeDetection": "OnPush"
				},
				"@schematics/angular:application": {
					"strict": true
				}
			},
			"root": "projects/ngx-cdk-lightbox",
			"sourceRoot": "projects/ngx-cdk-lightbox/src",
			"prefix": "lib",
			"architect": {
				"build": {
					"builder": "@angular-devkit/build-angular:ng-packagr",
					"options": {
						"project": "projects/ngx-cdk-lightbox/ng-package.json"
					},
					"configurations": {
						"production": {
							"tsConfig": "projects/ngx-cdk-lightbox/tsconfig.lib.prod.json"
						},
						"development": {
							"tsConfig": "projects/ngx-cdk-lightbox/tsconfig.lib.json"
						}
					},
					"defaultConfiguration": "production"
				},
				"test": {
					"builder": "@angular-devkit/build-angular:karma",
					"options": {
						"main": "projects/ngx-cdk-lightbox/src/test.ts",
						"tsConfig": "projects/ngx-cdk-lightbox/tsconfig.spec.json",
						"karmaConfig": "projects/ngx-cdk-lightbox/karma.conf.js",
						"stylePreprocessorOptions": {
							"includePaths": [
								"projects/ngx-cdk-lightbox/styles"
							]
						}
					}
				},
				"lint": {
					"builder": "@angular-eslint/builder:lint",
					"options": {
						"lintFilePatterns": [
							"projects/ngx-cdk-lightbox/**/*.ts",
							"projects/ngx-cdk-lightbox/**/*.html"
						],
						"cache": true
					}
				}
			}
		},
		"demo": {
			"projectType": "application",
			"schematics": {
				"@schematics/angular:component": {
					"style": "scss"
				}
			},
			"root": "projects/demo",
			"sourceRoot": "projects/demo/src",
			"prefix": "app",
			"architect": {
				"build": {
					"builder": "@angular-devkit/build-angular:application",
					"options": {
						"outputPath": {
              "base": "dist/demo"
            },
            "index": "projects/demo/src/index.html",
						"polyfills": [
              "projects/demo/src/polyfills.ts"
            ],
						"tsConfig": "projects/demo/tsconfig.app.json",
						"assets": [
							"projects/demo/src/favicon.ico",
							"projects/demo/src/assets"
						],
						"styles": [
							"projects/demo/src/styles.scss"
						],
            "scripts": [],
            "browser": "projects/demo/src/main.ts"
					},
					"configurations": {
						"production": {
							"budgets": [
								{
									"type": "initial",
									"maximumWarning": "2mb",
									"maximumError": "5mb"
								},
								{
									"type": "anyComponentStyle",
									"maximumWarning": "100kb",
									"maximumError": "200kb"
								}
							],
							"outputHashing": "all"
						},
            "development": {
              "optimization": false,
							"extractLicenses": false,
							"sourceMap": true,
							"namedChunks": true
						}
					},
					"defaultConfiguration": "production"
				},
				"serve": {
					"builder": "@angular-devkit/build-angular:dev-server",
					"options": {
						"buildTarget": "demo:build"
					},
					"configurations": {
						"production": {
							"buildTarget": "demo:build:production"
						}
					}
				},
				"extract-i18n": {
					"builder": "@angular-devkit/build-angular:extract-i18n",
					"options": {
						"buildTarget": "demo:build"
					}
				},
				"test": {
					"builder": "@angular-devkit/build-angular:karma",
					"options": {
						"main": "projects/demo/src/test.ts",
						"polyfills": "projects/demo/src/polyfills.ts",
						"tsConfig": "projects/demo/tsconfig.spec.json",
						"karmaConfig": "projects/demo/karma.conf.js",
						"assets": [
							"projects/demo/src/favicon.ico",
							"projects/demo/src/assets"
						],
						"styles": [
							"projects/demo/src/styles.scss"
						],
						"scripts": []
					}
				}
			}
		}
	},
	"cli": {
		"analytics": false
	},
	"schematics": {
		"@angular-eslint/schematics:application": {
			"setParserOptionsProject": true
		},
		"@angular-eslint/schematics:library": {
			"setParserOptionsProject": true
		}
	}
}
